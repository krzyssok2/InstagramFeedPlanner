<div @ref="FeedItemRef" @key=Post.Id class="feed-item @(IsSelected ? "selected" : "") @(string.IsNullOrEmpty(Post.Url) ? "no-image" : "")"
     ondragover="event.preventDefault();"
     draggable="@(Post.IsLocked ? "false" : "true")"
     @ondragstart="() => OnDragStart.InvokeAsync(Post.Id)"
     @ondrop="(e) => OnDrop.InvokeAsync((Post.Id, e))"
     @onclick="(e) => OnPostClick(e, Post.Id)">

    <div class="feed-item-controls-left">

        @if (!string.IsNullOrEmpty(Post.Url))
        {
            <button class="control-button"
                    @onclick="() => OnToggleLock.InvokeAsync(Post.Id)"
                    @onclick:stopPropagation
                    title="@(Post.IsLocked ? "Unlock post" : "Lock post")">
                @if (Post.IsLocked)
                {
                    <PaddleLocked />
                }
                else
                {
                    <PaddleUnlocked />
                }
            </button>
        }

        @if (!Post.IsLocked && !string.IsNullOrEmpty(Post.Url))
        {
            <button class="control-button"
                    @onclick="() => OnAdjust.InvokeAsync(Post)"
                    @onclick:stopPropagation
                    title="Adjust crop">
                <Wrench />
            </button>
        }

        @if (!Post.IsLocked)
        {
            <div class="fake-button" title="Import photo">
                <InputFile OnChange="(e) => Import(e, Post.Id)" accept=".jpg, .jpeg, .png, .webp" style="display:none" id="@($"InputField_{Post.Id}")" @onclick:stopPropagation/>

                <label for="@($"InputField_{Post.Id}")" 
                       style="cursor: pointer;"
                       @onclick:stopPropagation>
                    <Upload />
                </label>
            </div>
        }
    </div>

    <div class="feed-item-controls-right">
        @if (!Post.IsLocked)
        {
            <button class="control-button"
                    @onclick="() => OnDelete.InvokeAsync(Post.Id)"
                    @onclick:stopPropagation
                    title="Delete post">
                <XIcon StrokeThickness="4" />
            </button>
        }
    </div>

    @if (!string.IsNullOrEmpty(Post.Url))
    {
        <img src="@Post.Url"
             style="@GetCropStyle(Post.CropData, FeedItemWidth, FeedItemHeight)"
             draggable="@(Post.IsLocked ? "false" : "true")" />
    }
</div>



<script>
    window.resizeObserver = {
        observe: function (element, dotNetHelper) {
            if (!element) return;
            const ro = new ResizeObserver(entries => {
                for (let entry of entries) {
                    const { width, height } = entry.contentRect;
                    dotNetHelper.invokeMethodAsync('OnResized', width, height);
                }
            });
            ro.observe(element);
            element._resizeObserver = ro;
        },
        unobserve: function (element) {
            if (element && element._resizeObserver) {
                element._resizeObserver.disconnect();
                element._resizeObserver = null;
            }
        }
    };
</script>